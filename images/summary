#!/usr/bin/env python3
# This Python 3 script prints the given dimensions of all images in
# the current directory.
#
# Required pip packages:
#   Pillow

import os

# Local modules
import mediaUtils


def convertToMb(size):
    """Returns the size converted from B to MB, with one decimal place."""

    BYTES_PER_MEGABYTE = 1000000

    size /= (BYTES_PER_MEGABYTE/10)
    size = float(int(size))  # Change to a whole number
    size /= 10

    return size


if __name__ == '__main__':

    all_filenames = []
    all_dimensions = []
    all_sizes = []

    # Collect file info
    for filename in sorted(os.listdir(os.getcwd())):
        if not mediaUtils.is_image_file(filename):
            continue

        all_filenames.append(filename)

        dimensions = mediaUtils.get_dimensions(filename)
        all_dimensions.append(str(dimensions[0]) + " x " + str(dimensions[1]))

        size = mediaUtils.get_filesize(filename)
        all_sizes.append(str( convertToMb(size) ))

    # Exit early if no files in directory
    if all_filenames == []:
        exit(0)

    # Print file info, formatted
    max_len_filenames = len( max(all_filenames, key=len) )
    max_len_dimensions = len( max(all_dimensions, key=len) )

    for filename, dimensions, size in \
        zip(all_filenames, all_dimensions, all_sizes):

        padding_filename = max_len_filenames - len(filename) + 1
        padding_dimensions = max_len_dimensions - len(dimensions) + 1

        print(filename + ":" + " "*padding_filename
                + dimensions + "," + " "*padding_dimensions
                + size + " MB")
